package com.zkwq.recursion;

/**
 * @author luochao
 * @desc (递归)
 * @date 2023/2/6
 */
public class Recursion {
    /**
     * 1. 一个问题的解可以分解为几个子问题的解
     * 2. 这个问题与分解之后的子问题，除了数据规模不同，求解思路完全一样
     * 3. 存在递归终止条件
     * 核心：递归公式+终止条件
     * 不用想一层层的调用关系，不要试图用人脑去分解递归的每个步骤。
     * 递归代码要警惕重复计算
     * 为了避免重复计算，我们可以通过一个数据结构（比如散列表）来保存已经求解过的 f(k)。
     * 当递归调用到 f(k) 时，先看下是否已经求解过了。如果是，则直接从散列表中取值返回，不需要重复计算，这样就能避免刚讲的问题了。
     */
}
